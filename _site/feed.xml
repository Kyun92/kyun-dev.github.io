<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Type</title>
    <description></description>
    <link>http://localhost:4000/</link>
    <atom:link href="http://localhost:4000/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Sun, 05 Apr 2020 17:12:03 +0900</pubDate>
    <lastBuildDate>Sun, 05 Apr 2020 17:12:03 +0900</lastBuildDate>
    <generator>Jekyll v4.0.0</generator>

    
      <item>
        <title>블로그 테스트</title>
        <description>&lt;p&gt;자바스크립트에서 같은 동작을 하는 함수가 존재하더라도 타입에 따라 다른 결과가 나오는 경우가 있다. 더하기 함수에서 우리는 인자를 number 만 받던지 string만 받던지 정하고 싶다고 하자.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;    const a = {
    	add: (a: number, b: number): number =&amp;gt; a + b,
    	add: (a: string, b: string): string =&amp;gt; a + b
    }

    // 함수명 중복 발생
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;위 함수는 같은 동작을 하지만, 인자의 타입에 따라 다른 타입을 뽑아내고 싶은 경우가 있다.&lt;/p&gt;

&lt;p&gt;하지만 저렇게 같은 이름으로 선언하면 중복됐다고 선언되지 않고 그렇다고 타입을 느슨하게 설정하면&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;    const a = {
    	add: (a: number | string, b: number | string): number | string =&amp;gt; a + b,
    }

    // a.add(1 + 'abc') 문제 발생!
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;의도하지 않은 결과가 나올 수도 있다.&lt;/p&gt;

&lt;p&gt;이를 방지하기위해 등장한 것이 제네릭 일명 짝맞추기이다.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;    interface object&amp;lt;T&amp;gt; {
    	add: (a: T, b: T) =&amp;gt; T;
    }

    const a: obj&amp;lt;number&amp;gt; = {
    	add:(a, b) =&amp;gt; a + b,
    }

    const b: obj&amp;lt;string&amp;gt; = {
    	add:(a, b) =&amp;gt; a + b,
    }
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;extends---제네릭-제한두기&quot;&gt;extends - 제네릭 제한두기&lt;/h2&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;    interface obj&amp;lt;T extends string&amp;gt; {
    	...
    }
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;이렇게 하면 T를 string으로 제한 할 수 있다. string 자리에는 interface, type 모두 올 수 있다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://www.notion.so/lukalim/Generic-17e306fe33714b74a296a99288372352#e108aecc42024bb0ab7ef4b72b95288e&quot; alt=&quot;?&quot; /&gt;&lt;/p&gt;

&lt;p&gt;→ 제네릭을 이용한 &lt;code class=&quot;highlighter-rouge&quot;&gt;forEach&lt;/code&gt; 함수 구현 &lt;code class=&quot;highlighter-rouge&quot;&gt;item&lt;/code&gt; 의 타입이 자동으로 추론 된다.&lt;/p&gt;
</description>
        <pubDate>Wed, 01 Apr 2020 00:00:00 +0900</pubDate>
        <link>http://localhost:4000/2020/04/01/access-main-program-access-main-security-access-main-program-grid/</link>
        <guid isPermaLink="true">http://localhost:4000/2020/04/01/access-main-program-access-main-security-access-main-program-grid/</guid>
      </item>
    

    
      
        
      
    
      
        
          <item>
            <title>About</title>
            <description>&lt;p&gt;ABOUT&lt;/p&gt;
</description>
            <link>http://localhost:4000/about.html</link>
          </item>
        
      
    
      
    
      
    
      
    

  </channel>
</rss>